<?xml version="1.0" encoding="UTF-8"?>
<project name="geneticsorting" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.apk"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.ane"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
    <path id="jdk.classpath.1.7">
        <fileset dir="${jdk.home.1.7}">
            <include name="../jdk/jre/lib/resources.jar"/>
            <include name="../jdk/jre/lib/rhino.jar"/>
            <include name="../jdk/jre/lib/management-agent.jar"/>
            <include name="../jdk/jre/lib/jce.jar"/>
            <include name="../jdk/jre/lib/compilefontconfig.jar"/>
            <include name="../jdk/jre/lib/jsse.jar"/>
            <include name="../jdk/jre/lib/javazic.jar"/>
            <include name="../jdk/jre/lib/rt.jar"/>
            <include name="../jdk/jre/lib/charsets.jar"/>
            <include name="../jdk/jre/lib/ext/dnsns.jar"/>
            <include name="../jdk/jre/lib/ext/sunpkcs11.jar"/>
            <include name="../jdk/jre/lib/ext/zipfs.jar"/>
            <include name="../jdk/jre/lib/ext/sunjce_provider.jar"/>
            <include name="../jdk/jre/lib/ext/pulse-java.jar"/>
            <include name="../jdk/jre/lib/ext/java-atk-wrapper.jar"/>
            <include name="../jdk/jre/lib/ext/localedata.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.7}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>

    <!-- Modules -->


    <!-- Module GeneticSorting -->

    <dirname property="module.geneticsorting.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.geneticsorting" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.geneticsorting" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.geneticsorting" value="${project.jdk.classpath}"/>

    <property name="compiler.args.geneticsorting"
              value="-encoding UTF-8 -source 1.7 ${compiler.args}"/>

    <property name="geneticsorting.output.dir"
              value="${module.geneticsorting.basedir}/bin/production/GeneticSorting"/>
    <property name="geneticsorting.testoutput.dir"
              value="${module.geneticsorting.basedir}/bin/test/GeneticSorting"/>

    <path id="geneticsorting.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="geneticsorting.module.production.classpath">
        <path refid="${module.jdk.classpath.geneticsorting}"/>
    </path>

    <path id="geneticsorting.runtime.production.module.classpath">
        <pathelement location="${geneticsorting.output.dir}"/>
    </path>

    <path id="geneticsorting.module.classpath">
        <path refid="${module.jdk.classpath.geneticsorting}"/>
        <pathelement location="${geneticsorting.output.dir}"/>
    </path>

    <path id="geneticsorting.runtime.module.classpath">
        <pathelement location="${geneticsorting.testoutput.dir}"/>
        <pathelement location="${geneticsorting.output.dir}"/>
    </path>


    <patternset id="excluded.from.module.geneticsorting">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.geneticsorting">
        <patternset refid="excluded.from.module.geneticsorting"/>
    </patternset>

    <path id="geneticsorting.module.sourcepath">
        <dirset dir="${module.geneticsorting.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.geneticsorting"
            depends="compile.module.geneticsorting.production,compile.module.geneticsorting.tests"
            description="Compile module GeneticSorting"/>

    <target name="compile.module.geneticsorting.production"
            description="Compile module GeneticSorting; production classes">
        <mkdir dir="${geneticsorting.output.dir}"/>
        <javac destdir="${geneticsorting.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}"
               fork="true" executable="${module.jdk.bin.geneticsorting}/javac">
            <compilerarg line="${compiler.args.geneticsorting}"/>
            <bootclasspath refid="geneticsorting.module.bootclasspath"/>
            <classpath refid="geneticsorting.module.production.classpath"/>
            <src refid="geneticsorting.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.geneticsorting"/>
        </javac>

        <copy todir="${geneticsorting.output.dir}">
            <fileset dir="${module.geneticsorting.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.geneticsorting.tests"
            depends="compile.module.geneticsorting.production"
            description="compile module GeneticSorting; test classes" unless="skip.tests"/>

    <target name="clean.module.geneticsorting" description="cleanup module">
        <delete dir="${geneticsorting.output.dir}"/>
        <delete dir="${geneticsorting.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.geneticsorting" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.geneticsorting"
            description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.geneticsorting.jar"
                  value="${basedir}/bin/artifacts/GeneticSorting_jar"/>
        <property name="artifact.output.geneticsortinginterpreter.jar"
                  value="${basedir}/bin/artifacts/GeneticSortingInterpreter_jar"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.GeneticSorting.jar"
                  value="${artifacts.temp.dir}/GeneticSorting.jar"/>
        <property name="temp.jar.path.GeneticSorting.jar2"
                  value="${artifacts.temp.dir}/1/GeneticSorting.jar"/>
        <mkdir dir="${artifacts.temp.dir}/1"/>
    </target>

    <target name="artifact.geneticsorting.jar"
            depends="init.artifacts, compile.module.geneticsorting"
            description="Build &#39;GeneticSorting.jar&#39; artifact">
        <property name="artifact.temp.output.geneticsorting.jar"
                  value="${artifacts.temp.dir}/GeneticSorting_jar"/>
        <mkdir dir="${artifact.temp.output.geneticsorting.jar}"/>
        <jar destfile="${temp.jar.path.GeneticSorting.jar}" duplicate="preserve"
             filesetmanifest="mergewithoutmain">
            <zipfileset dir="${geneticsorting.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.GeneticSorting.jar}"
              tofile="${artifact.temp.output.geneticsorting.jar}/GeneticSorting.jar"/>
    </target>

    <target name="artifact.geneticsortinginterpreter.jar"
            depends="init.artifacts, compile.module.geneticsorting"
            description="Build &#39;GeneticSortingInterpreter.jar&#39; artifact">
        <property name="artifact.temp.output.geneticsortinginterpreter.jar"
                  value="${artifacts.temp.dir}/GeneticSortingInterpreter_jar"/>
        <mkdir dir="${artifact.temp.output.geneticsortinginterpreter.jar}"/>
        <jar destfile="${temp.jar.path.GeneticSorting.jar2}" duplicate="preserve"
             filesetmanifest="mergewithoutmain">
            <zipfileset dir="${geneticsorting.output.dir}"/>
        </jar>
        <copy file="${temp.jar.path.GeneticSorting.jar2}"
              tofile="${artifact.temp.output.geneticsortinginterpreter.jar}/GeneticSorting.jar"/>
    </target>

    <target name="build.all.artifacts"
            depends="artifact.geneticsorting.jar, artifact.geneticsortinginterpreter.jar"
            description="Build all artifacts">
        <mkdir dir="${artifact.output.geneticsorting.jar}"/>
        <copy todir="${artifact.output.geneticsorting.jar}">
            <fileset dir="${artifact.temp.output.geneticsorting.jar}"/>
        </copy>
        <mkdir dir="${artifact.output.geneticsortinginterpreter.jar}"/>
        <copy todir="${artifact.output.geneticsortinginterpreter.jar}">
            <fileset dir="${artifact.temp.output.geneticsortinginterpreter.jar}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>